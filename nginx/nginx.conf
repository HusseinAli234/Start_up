server {
    listen 80;
    server_name api.sand-box.pp.ua;

    location /back_static/ {
        alias /app/back_static/;
    }

    location /back_media/ {
        alias /app/back_media/;
    }

    location /{
            if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' "http://localhost:3000/";
            add_header 'Access-Control-Allow-Methods' "GET, POST, PUT, DELETE, OPTIONS";
            add_header 'Access-Control-Allow-Headers' "Authorization, Content-Type, Accept, Origin, X-Requested-With";
            add_header 'Access-Control-Allow-Credentials' "true";
            return 200;
        }

        return 301 https://$host$request_uri;
    }

}


server{
    listen 443 ssl;

    server_name api.sand-box.pp.ua;
    ssl_certificate /etc/letsencrypt/live/api.sand-box.pp.ua/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.sand-box.pp.ua/privkey.pem;
    location / {
    proxy_pass http://fastapi:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    client_max_body_size 100M;

    # add_header Access-Control-Allow-Credentials "true" always;
    # add_header Access-Control-Allow-Origin "http://localhost:3000" always;
    # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    # add_header Access-Control-Allow-Headers "Authorization,Content-Type,Accept,Origin,X-Requested-With" always;
    # if ($request_method = OPTIONS ) {
    #     add_header Content-Length 0;
    #     add_header Content-Type text/plain;
    #     return 200;
    # }
}

    location /.well-known/acme-challenge/ {
    allow all;
    root /var/lib/letsencrypt/webroot;
    }


    location /back_static/ {
        alias /app/back_static/;
    }

    location /back_media/ {
        alias /app/back_media/;
    }

}
